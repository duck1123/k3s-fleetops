apiVersion: v1
data:
  nginx.conf: "worker_processes auto;\npid /opt/bitnami/nginx/tmp/nginx.pid;\n\nevents {\n  worker_connections 3096;\n  use epoll;\n  multi_accept on;\n}\n\nhttp {\n  client_body_temp_path  \"/opt/bitnami/nginx/tmp/client_body\" 1 2;\n  proxy_temp_path        \"/opt/bitnami/nginx/tmp/proxy\" 1 2;\n  fastcgi_temp_path      \"/opt/bitnami/nginx/tmp/fastcgi\" 1 2;\n  scgi_temp_path         \"/opt/bitnami/nginx/tmp/scgi\" 1 2;\n  uwsgi_temp_path        \"/opt/bitnami/nginx/tmp/uwsgi\" 1 2;\n\n  tcp_nodelay on;\n\n  # this is necessary for us to be able to disable request buffering in all cases\n  proxy_http_version 1.1;\n\n  upstream core {\n    server harbor-core:80;\n  }\n\n  upstream portal {\n    server harbor-portal:80;\n  }\n\n  log_format timed_combined '[$time_local]:$remote_addr - '\n    '\"$request\" $status $body_bytes_sent '\n    '\"$http_referer\" \"$http_user_agent\" '\n    '$request_time $upstream_response_time $pipe';\n\n  access_log /dev/stdout timed_combined;\n  \n  server {\n    listen 8443 ssl;\n    listen [::]:8443 ssl;\n    server_tokens off;\n    # SSL\n    ssl_certificate /etc/nginx/cert/tls.crt;\n    ssl_certificate_key /etc/nginx/cert/tls.key;\n\n    # Recommendations from https://raymii.org/s/tutorials/Strong_SSL_Security_On_nginx.html\n    ssl_protocols TLSv1.1 TLSv1.2;\n    ssl_ciphers '!aNULL:kECDH+AESGCM:ECDH+AESGCM:RSA+AESGCM:kECDH+AES:ECDH+AES:RSA+AES:';\n    ssl_prefer_server_ciphers on;\n    ssl_session_cache shared:SSL:10m;\n\n    # disable any limits to avoid HTTP 413 for large image uploads\n    client_max_body_size 0;\n\n    # required to avoid HTTP 411: see Issue #1486 (https://github.com/docker/docker/issues/1486)\n    chunked_transfer_encoding on;\n\n    # Add extra headers\n    add_header Strict-Transport-Security \"max-age=31536000; includeSubdomains; preload\";\n    add_header X-Frame-Options DENY;\n    add_header Content-Security-Policy \"frame-ancestors 'none'\";\n\n    location / {\n      proxy_pass http://portal/;\n      proxy_set_header Host $http_host;\n      proxy_set_header X-Real-IP $remote_addr;\n      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n      proxy_set_header X-Forwarded-Proto $scheme;\n\n      # Add Secure flag when serving HTTPS\n      proxy_cookie_path / \"/; HttpOnly; Secure\";\n\n      proxy_buffering off;\n      proxy_request_buffering off;\n    }\n    \n    location /api/ {\n      proxy_pass http://core/api/;\n      proxy_set_header Host $host;\n      proxy_set_header X-Real-IP $remote_addr;\n      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n      proxy_set_header X-Forwarded-Proto $scheme;\n      proxy_cookie_path / \"/; Secure\";\n\n      proxy_buffering off;\n      proxy_request_buffering off;\n    }\n\n    location /chartrepo/ {\n      proxy_pass http://core/chartrepo/;\n      proxy_set_header Host $host;\n      proxy_set_header X-Real-IP $remote_addr;\n      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n      proxy_set_header X-Forwarded-Proto $scheme;\n      proxy_cookie_path / \"/; Secure\";\n\n      proxy_buffering off;\n      proxy_request_buffering off;\n    }\n\n    location /c/ {\n      proxy_pass http://core/c/;\n      proxy_set_header Host $host;\n      proxy_set_header X-Real-IP $remote_addr;\n      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n      proxy_set_header X-Forwarded-Proto $scheme;\n      proxy_cookie_path / \"/; Secure\";\n\n      proxy_buffering off;\n      proxy_request_buffering off;\n    }\n\n    location /v1/ {\n      return 404;\n    }\n\n    location /v2/ {\n      proxy_pass http://core/v2/;\n      proxy_set_header Host $http_host;\n      proxy_set_header X-Real-IP $remote_addr;\n      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n      proxy_set_header X-Forwarded-Proto $scheme;\n\n      proxy_buffering off;\n      proxy_request_buffering off;\n    }\n\n    location /service/ {\n      proxy_pass http://core/service/;\n      proxy_set_header Host $http_host;\n      proxy_set_header X-Real-IP $remote_addr;\n      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n      proxy_set_header X-Forwarded-Proto $scheme;\n      proxy_cookie_path / \"/; Secure\";\n\n      proxy_buffering off;\n      proxy_request_buffering off;\n    }\n\n  location /service/notifications {\n      return 404;\n    }\n  }\n  server {\n      listen 8080;\n      listen [::]:8080;\n      return 301 https://$host$request_uri;\n  }\n}\n"
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/component: nginx
    app.kubernetes.io/instance: harbor
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: harbor
    app.kubernetes.io/version: 1.27.4
    helm.sh/chart: harbor-24.6.0
  name: harbor-nginx
  namespace: harbor
