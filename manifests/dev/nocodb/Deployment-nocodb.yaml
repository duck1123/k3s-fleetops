apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/instance: nocodb
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: nocodb
    app.kubernetes.io/version: 0.258.0
    helm.sh/chart: nocodb-0.4.5
  name: nocodb
  namespace: nocodb
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: nocodb
      app.kubernetes.io/name: nocodb
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: nocodb
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: nocodb
        app.kubernetes.io/version: 0.258.0
        helm.sh/chart: nocodb-0.4.5
    spec:
      automountServiceAccountToken: false
      containers:
        - env:
            - name: NC_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: nocodb-postgresql
            - name: PORT
              value: "8080"
            - name: NC_DB
              value: pg://nocodb-postgresql:5432?u=nocodb_user&p=$(NC_DB_PASSWORD)&d=nocodb
            - name: NC_S3_ENDPOINT
              value: http://nocodb-minio:9000
            - name: NC_S3_REGION
              value: us-east-1
            - name: NC_S3_BUCKET_NAME
              value: nocodb
            - name: NC_S3_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  key: root-user
                  name: nocodb-minio
            - name: NC_S3_ACCESS_SECRET
              valueFrom:
                secretKeyRef:
                  key: root-password
                  name: nocodb-minio
            - name: NC_S3_FORCE_PATH_STYLE
              value: "true"
            - name: NC_ADMIN_EMAIL
              valueFrom:
                secretKeyRef:
                  key: email
                  name: nocodb-supper-admin-secret
            - name: NC_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: nocodb-supper-admin-secret
          envFrom:
            - configMapRef:
                name: nocodb-config
                optional: true
            - secretRef:
                name: nocodb-secrets
                optional: true
          image: nocodb/nocodb:0.258.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /api/v1/health
              port: http
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: nocodb
          ports:
            - containerPort: 8080
              name: http
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /api/v1/health
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            limits:
              cpu: 500m
              ephemeral-storage: 2Gi
              memory: 1Gi
            requests:
              cpu: 250m
              ephemeral-storage: 1Gi
              memory: 512Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
                - CHOWN
                - FOWNER
                - SYS_CHROOT
                - SETGID
                - SETUID
                - DAC_OVERRIDE
              drop:
                - ALL
            privileged: false
            readOnlyRootFilesystem: false
            runAsGroup: 0
            runAsNonRoot: false
            runAsUser: 0
            seLinuxOptions: {}
            seccompProfile:
              type: RuntimeDefault
      initContainers:
        - command:
            - sh
            - -c
            - |
              until pg_isready -h $NC_DB_HOST -p $NC_DB_PORT -U $NC_DB_USER -d $NC_DB_NAME; do
                echo "Waiting for database...";
                sleep 2;
              done;
              echo "Database is ready.";
          env:
            - name: NC_DB_HOST
              value: nocodb-postgresql
            - name: NC_DB_PORT
              value: "5432"
            - name: NC_DB_USER
              value: nocodb_user
            - name: NC_DB_NAME
              value: nocodb
          image: postgres:alpine
          name: wait-for-database
        - command:
            - sh
            - -c
            - |
              until wget -qO- http://nocodb-minio:9000/minio/health/ready; do
                echo "Waiting for minio...";
                sleep 2;
              done;
              echo "Minio is ready.";
          image: busybox
          name: wait-for-minio
      securityContext:
        fsGroup: 0
        fsGroupChangePolicy: Always
        supplementalGroups: []
        sysctls: []
      serviceAccountName: nocodb
