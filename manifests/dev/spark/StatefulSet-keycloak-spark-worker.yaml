apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app.kubernetes.io/component: worker
    app.kubernetes.io/instance: keycloak
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: spark
    app.kubernetes.io/version: 3.5.5
    helm.sh/chart: spark-9.3.5
  name: keycloak-spark-worker
  namespace: spark
spec:
  podManagementPolicy: OrderedReady
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/component: worker
      app.kubernetes.io/instance: keycloak
      app.kubernetes.io/name: spark
  serviceName: keycloak-spark-headless
  template:
    metadata:
      labels:
        app.kubernetes.io/component: worker
        app.kubernetes.io/instance: keycloak
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: spark
        app.kubernetes.io/version: 3.5.5
        helm.sh/chart: spark-9.3.5
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/component: worker
                    app.kubernetes.io/instance: keycloak
                    app.kubernetes.io/name: spark
                topologyKey: kubernetes.io/hostname
              weight: 1
      automountServiceAccountToken: false
      containers:
        - env:
            - name: SPARK_MODE
              value: worker
            - name: BITNAMI_DEBUG
              value: "false"
            - name: SPARK_DAEMON_MEMORY
              value: ""
            - name: SPARK_WORKER_WEBUI_PORT
              value: "8080"
            - name: SPARK_DAEMON_JAVA_OPTS
              value: ""
            - name: SPARK_MASTER_URL
              value: spark://keycloak-spark-master-svc:7077
            - name: SPARK_WORKER_OPTS
          image: docker.io/bitnami/spark:3.5.5-debian-12-r0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 6
            initialDelaySeconds: 180
            periodSeconds: 20
            successThreshold: 1
            tcpSocket:
              port: 8080
            timeoutSeconds: 5
          name: spark-worker
          ports:
            - containerPort: 8080
              name: http
              protocol: TCP
          readinessProbe:
            failureThreshold: 6
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            limits:
              cpu: 750m
              ephemeral-storage: 2Gi
              memory: 768Mi
            requests:
              cpu: 500m
              ephemeral-storage: 50Mi
              memory: 512Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seLinuxOptions: {}
            seccompProfile:
              type: RuntimeDefault
          startupProbe:
            failureThreshold: 6
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          volumeMounts:
            - mountPath: /tmp
              name: empty-dir
              subPath: tmp-dir
            - mountPath: /opt/bitnami/spark/conf
              name: empty-dir
              subPath: app-conf-dir
            - mountPath: /opt/bitnami/spark/tmp
              name: empty-dir
              subPath: app-tmp-dir
            - mountPath: /opt/bitnami/spark/logs
              name: empty-dir
              subPath: app-logs-dir
            - mountPath: /opt/bitnami/spark/work
              name: empty-dir
              subPath: app-work-dir
      securityContext:
        fsGroup: 1001
        fsGroupChangePolicy: Always
        seLinuxOptions: {}
        supplementalGroups: []
        sysctls: []
      serviceAccountName: keycloak-spark
      volumes:
        - emptyDir: {}
          name: empty-dir
  updateStrategy:
    type: RollingUpdate
