apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/instance: satisfactory
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: satisfactory
    app.kubernetes.io/version: v1.9.8
    helm.sh/chart: satisfactory-0.3.2
  name: satisfactory
  namespace: satisfactory
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: satisfactory
      app.kubernetes.io/name: satisfactory
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        checksum/configmap: 1b637638cef9476e168b3b5d75e516d43d68a68e789e79c0ac1012ce2c62ddd2
      labels:
        app.kubernetes.io/instance: satisfactory
        app.kubernetes.io/name: satisfactory
    spec:
      containers:
        - env:
            - name: DEBUG
              value: "false"
            - name: STEAM_BETA
              value: "false"
          envFrom:
            - configMapRef:
                name: satisfactory-env
          image: wolveix/satisfactory-server:v1.9.8
          imagePullPolicy: IfNotPresent
          name: satisfactory
          ports:
            - containerPort: 7777
              name: game-port-udp
              protocol: UDP
            - containerPort: 7777
              name: game-port-tcp
              protocol: TCP
          resources: {}
          securityContext: {}
          volumeMounts:
            - mountPath: /config
              name: satisfactory-pv
      securityContext: {}
      serviceAccountName: satisfactory-sa
      volumes:
        - name: satisfactory-pv
          persistentVolumeClaim:
            claimName: satisfactory-pvc
