{:tasks
 {:requires
  ([babashka.fs :as fs]
   [clojure.string :as str])

  apply-master-application
  {:task (shell "kubectl apply -f manifests/00-master.yaml")}

  build
  {:task
   (let [dry-run? false
         files    (into [] (filter (fn [f] (not (.endsWith f "bb.edn"))) (fs/glob "." "**/*.edn")))]
     (doseq [file files]
       (println (str "# File: " file "\n----"))
       (let [absolute  (.toAbsolutePath file)
             base-name (str/replace absolute  (re-pattern "\\..*$") "")
             parts     [(str "cat " absolute)
                        (str "jet -i edn -o yaml")
                        (str "tee " base-name ".yaml")]
             command   (str "sh -c \"" (str/join " | " parts) "\"")]
         (if dry-run?
           (println (str "[DRY-RUN] " command))
           (shell command)))))}

  delete-secret-controller
  {:task
   (let [namespace "sealed-secrets"
         command   (str "kubectl -n \"" namespace "\" delete pod -l name=sealed-secrets-controller")]
     (shell command))}

  forward-traefik-dashboard
  {:task
   (do
     (let [get-name-command "kubectl get pods --selector \"app.kubernetes.io/name=traefik\" --output=name"
           pod-name         (shell get-name-command)
           command          (str "kubectl port-forward " pod-name " 9000:9000")]
       (shell command)))}

  ;; https://github.com/bitnami-labs/sealed-secrets/blob/main/docs/bring-your-own-certificates.md
  install-sealed-key
  {:task
   (let [dry-run?    false
         namespace   "sealed-secrets"
         secret-name "imported-secret"
         public-key  "tls.crt"
         private-key "tls.key"
         command     (str "kubectl -n \"" namespace  "\" create secret tls \"" secret-name
                          "\" --cert=\"" public-key "\" --key=\"" private-key "\"")]
     (if dry-run?
       (println command)
       (shell command)))}

  apply-sealed-key-label
  {:task
   (let [dry-run?    true
         namespace   "sealed-secrets"
         secret-name "imported-secret"
         command     (str "kubectl -n \"" namespace  "\" label secret \"" secret-name  "\" sealedsecrets.bitnami.com/sealed-secrets-key=active")]
     (if dry-run?
       (println command)
       (shell command)))}}}
